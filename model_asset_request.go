/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.8 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the AssetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetRequest{}

// AssetRequest Adds support for custom fields and tags.
type AssetRequest struct {
	// Can be used to quickly identify a particular asset
	Name *string `json:"name,omitempty"`
	// Identifier assigned by owner
	AssetTag NullableString `json:"asset_tag,omitempty"`
	// Identifier assigned by manufacturer
	Serial            NullableString                         `json:"serial,omitempty"`
	Status            AssetStatus                            `json:"status"`
	DeviceType        NullableNestedDeviceTypeRequest        `json:"device_type,omitempty"`
	Device            NullableNestedDeviceRequest            `json:"device,omitempty"`
	ModuleType        NullableNestedModuleTypeRequest        `json:"module_type,omitempty"`
	InventoryitemType NullableNestedInventoryItemTypeRequest `json:"inventoryitem_type,omitempty"`
	Inventoryitem     NullableNestedInventoryItemRequest     `json:"inventoryitem,omitempty"`
	Tenant            NullableNestedTenantRequest            `json:"tenant,omitempty"`
	Contact           NullableNestedContactRequest           `json:"contact,omitempty"`
	StorageLocation   NullableNestedLocationRequest          `json:"storage_location,omitempty"`
	Owner             NullableNestedTenantRequest            `json:"owner,omitempty"`
	Delivery          NullableNestedDeliveryRequest          `json:"delivery,omitempty"`
	Purchase          NullableNestedPurchaseRequest          `json:"purchase,omitempty"`
	// First date warranty for this asset is valid
	WarrantyStart NullableString `json:"warranty_start,omitempty"`
	// Last date warranty for this asset is valid
	WarrantyEnd          NullableString         `json:"warranty_end,omitempty"`
	Comments             *string                `json:"comments,omitempty"`
	Tags                 []NestedTagRequest     `json:"tags,omitempty"`
	CustomFields         map[string]interface{} `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetRequest AssetRequest

// NewAssetRequest instantiates a new AssetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetRequest(status AssetStatus) *AssetRequest {
	this := AssetRequest{}
	this.Status = status
	return &this
}

// NewAssetRequestWithDefaults instantiates a new AssetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetRequestWithDefaults() *AssetRequest {
	this := AssetRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AssetRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AssetRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AssetRequest) SetName(v string) {
	o.Name = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetAssetTag() string {
	if o == nil || IsNil(o.AssetTag.Get()) {
		var ret string
		return ret
	}
	return *o.AssetTag.Get()
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetAssetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetTag.Get(), o.AssetTag.IsSet()
}

// HasAssetTag returns a boolean if a field has been set.
func (o *AssetRequest) HasAssetTag() bool {
	if o != nil && o.AssetTag.IsSet() {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given NullableString and assigns it to the AssetTag field.
func (o *AssetRequest) SetAssetTag(v string) {
	o.AssetTag.Set(&v)
}

// SetAssetTagNil sets the value for AssetTag to be an explicit nil
func (o *AssetRequest) SetAssetTagNil() {
	o.AssetTag.Set(nil)
}

// UnsetAssetTag ensures that no value is present for AssetTag, not even an explicit nil
func (o *AssetRequest) UnsetAssetTag() {
	o.AssetTag.Unset()
}

// GetSerial returns the Serial field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetSerial() string {
	if o == nil || IsNil(o.Serial.Get()) {
		var ret string
		return ret
	}
	return *o.Serial.Get()
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Serial.Get(), o.Serial.IsSet()
}

// HasSerial returns a boolean if a field has been set.
func (o *AssetRequest) HasSerial() bool {
	if o != nil && o.Serial.IsSet() {
		return true
	}

	return false
}

// SetSerial gets a reference to the given NullableString and assigns it to the Serial field.
func (o *AssetRequest) SetSerial(v string) {
	o.Serial.Set(&v)
}

// SetSerialNil sets the value for Serial to be an explicit nil
func (o *AssetRequest) SetSerialNil() {
	o.Serial.Set(nil)
}

// UnsetSerial ensures that no value is present for Serial, not even an explicit nil
func (o *AssetRequest) UnsetSerial() {
	o.Serial.Unset()
}

// GetStatus returns the Status field value
func (o *AssetRequest) GetStatus() AssetStatus {
	if o == nil {
		var ret AssetStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AssetRequest) GetStatusOk() (*AssetStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AssetRequest) SetStatus(v AssetStatus) {
	o.Status = v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetDeviceType() NestedDeviceTypeRequest {
	if o == nil || IsNil(o.DeviceType.Get()) {
		var ret NestedDeviceTypeRequest
		return ret
	}
	return *o.DeviceType.Get()
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetDeviceTypeOk() (*NestedDeviceTypeRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceType.Get(), o.DeviceType.IsSet()
}

// HasDeviceType returns a boolean if a field has been set.
func (o *AssetRequest) HasDeviceType() bool {
	if o != nil && o.DeviceType.IsSet() {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given NullableNestedDeviceTypeRequest and assigns it to the DeviceType field.
func (o *AssetRequest) SetDeviceType(v NestedDeviceTypeRequest) {
	o.DeviceType.Set(&v)
}

// SetDeviceTypeNil sets the value for DeviceType to be an explicit nil
func (o *AssetRequest) SetDeviceTypeNil() {
	o.DeviceType.Set(nil)
}

// UnsetDeviceType ensures that no value is present for DeviceType, not even an explicit nil
func (o *AssetRequest) UnsetDeviceType() {
	o.DeviceType.Unset()
}

// GetDevice returns the Device field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetDevice() NestedDeviceRequest {
	if o == nil || IsNil(o.Device.Get()) {
		var ret NestedDeviceRequest
		return ret
	}
	return *o.Device.Get()
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetDeviceOk() (*NestedDeviceRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Device.Get(), o.Device.IsSet()
}

// HasDevice returns a boolean if a field has been set.
func (o *AssetRequest) HasDevice() bool {
	if o != nil && o.Device.IsSet() {
		return true
	}

	return false
}

// SetDevice gets a reference to the given NullableNestedDeviceRequest and assigns it to the Device field.
func (o *AssetRequest) SetDevice(v NestedDeviceRequest) {
	o.Device.Set(&v)
}

// SetDeviceNil sets the value for Device to be an explicit nil
func (o *AssetRequest) SetDeviceNil() {
	o.Device.Set(nil)
}

// UnsetDevice ensures that no value is present for Device, not even an explicit nil
func (o *AssetRequest) UnsetDevice() {
	o.Device.Unset()
}

// GetModuleType returns the ModuleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetModuleType() NestedModuleTypeRequest {
	if o == nil || IsNil(o.ModuleType.Get()) {
		var ret NestedModuleTypeRequest
		return ret
	}
	return *o.ModuleType.Get()
}

// GetModuleTypeOk returns a tuple with the ModuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetModuleTypeOk() (*NestedModuleTypeRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModuleType.Get(), o.ModuleType.IsSet()
}

// HasModuleType returns a boolean if a field has been set.
func (o *AssetRequest) HasModuleType() bool {
	if o != nil && o.ModuleType.IsSet() {
		return true
	}

	return false
}

// SetModuleType gets a reference to the given NullableNestedModuleTypeRequest and assigns it to the ModuleType field.
func (o *AssetRequest) SetModuleType(v NestedModuleTypeRequest) {
	o.ModuleType.Set(&v)
}

// SetModuleTypeNil sets the value for ModuleType to be an explicit nil
func (o *AssetRequest) SetModuleTypeNil() {
	o.ModuleType.Set(nil)
}

// UnsetModuleType ensures that no value is present for ModuleType, not even an explicit nil
func (o *AssetRequest) UnsetModuleType() {
	o.ModuleType.Unset()
}

// GetInventoryitemType returns the InventoryitemType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetInventoryitemType() NestedInventoryItemTypeRequest {
	if o == nil || IsNil(o.InventoryitemType.Get()) {
		var ret NestedInventoryItemTypeRequest
		return ret
	}
	return *o.InventoryitemType.Get()
}

// GetInventoryitemTypeOk returns a tuple with the InventoryitemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetInventoryitemTypeOk() (*NestedInventoryItemTypeRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryitemType.Get(), o.InventoryitemType.IsSet()
}

// HasInventoryitemType returns a boolean if a field has been set.
func (o *AssetRequest) HasInventoryitemType() bool {
	if o != nil && o.InventoryitemType.IsSet() {
		return true
	}

	return false
}

// SetInventoryitemType gets a reference to the given NullableNestedInventoryItemTypeRequest and assigns it to the InventoryitemType field.
func (o *AssetRequest) SetInventoryitemType(v NestedInventoryItemTypeRequest) {
	o.InventoryitemType.Set(&v)
}

// SetInventoryitemTypeNil sets the value for InventoryitemType to be an explicit nil
func (o *AssetRequest) SetInventoryitemTypeNil() {
	o.InventoryitemType.Set(nil)
}

// UnsetInventoryitemType ensures that no value is present for InventoryitemType, not even an explicit nil
func (o *AssetRequest) UnsetInventoryitemType() {
	o.InventoryitemType.Unset()
}

// GetInventoryitem returns the Inventoryitem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetInventoryitem() NestedInventoryItemRequest {
	if o == nil || IsNil(o.Inventoryitem.Get()) {
		var ret NestedInventoryItemRequest
		return ret
	}
	return *o.Inventoryitem.Get()
}

// GetInventoryitemOk returns a tuple with the Inventoryitem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetInventoryitemOk() (*NestedInventoryItemRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inventoryitem.Get(), o.Inventoryitem.IsSet()
}

// HasInventoryitem returns a boolean if a field has been set.
func (o *AssetRequest) HasInventoryitem() bool {
	if o != nil && o.Inventoryitem.IsSet() {
		return true
	}

	return false
}

// SetInventoryitem gets a reference to the given NullableNestedInventoryItemRequest and assigns it to the Inventoryitem field.
func (o *AssetRequest) SetInventoryitem(v NestedInventoryItemRequest) {
	o.Inventoryitem.Set(&v)
}

// SetInventoryitemNil sets the value for Inventoryitem to be an explicit nil
func (o *AssetRequest) SetInventoryitemNil() {
	o.Inventoryitem.Set(nil)
}

// UnsetInventoryitem ensures that no value is present for Inventoryitem, not even an explicit nil
func (o *AssetRequest) UnsetInventoryitem() {
	o.Inventoryitem.Unset()
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetTenant() NestedTenantRequest {
	if o == nil || IsNil(o.Tenant.Get()) {
		var ret NestedTenantRequest
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetTenantOk() (*NestedTenantRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *AssetRequest) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableNestedTenantRequest and assigns it to the Tenant field.
func (o *AssetRequest) SetTenant(v NestedTenantRequest) {
	o.Tenant.Set(&v)
}

// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *AssetRequest) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *AssetRequest) UnsetTenant() {
	o.Tenant.Unset()
}

// GetContact returns the Contact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetContact() NestedContactRequest {
	if o == nil || IsNil(o.Contact.Get()) {
		var ret NestedContactRequest
		return ret
	}
	return *o.Contact.Get()
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetContactOk() (*NestedContactRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contact.Get(), o.Contact.IsSet()
}

// HasContact returns a boolean if a field has been set.
func (o *AssetRequest) HasContact() bool {
	if o != nil && o.Contact.IsSet() {
		return true
	}

	return false
}

// SetContact gets a reference to the given NullableNestedContactRequest and assigns it to the Contact field.
func (o *AssetRequest) SetContact(v NestedContactRequest) {
	o.Contact.Set(&v)
}

// SetContactNil sets the value for Contact to be an explicit nil
func (o *AssetRequest) SetContactNil() {
	o.Contact.Set(nil)
}

// UnsetContact ensures that no value is present for Contact, not even an explicit nil
func (o *AssetRequest) UnsetContact() {
	o.Contact.Unset()
}

// GetStorageLocation returns the StorageLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetStorageLocation() NestedLocationRequest {
	if o == nil || IsNil(o.StorageLocation.Get()) {
		var ret NestedLocationRequest
		return ret
	}
	return *o.StorageLocation.Get()
}

// GetStorageLocationOk returns a tuple with the StorageLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetStorageLocationOk() (*NestedLocationRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageLocation.Get(), o.StorageLocation.IsSet()
}

// HasStorageLocation returns a boolean if a field has been set.
func (o *AssetRequest) HasStorageLocation() bool {
	if o != nil && o.StorageLocation.IsSet() {
		return true
	}

	return false
}

// SetStorageLocation gets a reference to the given NullableNestedLocationRequest and assigns it to the StorageLocation field.
func (o *AssetRequest) SetStorageLocation(v NestedLocationRequest) {
	o.StorageLocation.Set(&v)
}

// SetStorageLocationNil sets the value for StorageLocation to be an explicit nil
func (o *AssetRequest) SetStorageLocationNil() {
	o.StorageLocation.Set(nil)
}

// UnsetStorageLocation ensures that no value is present for StorageLocation, not even an explicit nil
func (o *AssetRequest) UnsetStorageLocation() {
	o.StorageLocation.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetOwner() NestedTenantRequest {
	if o == nil || IsNil(o.Owner.Get()) {
		var ret NestedTenantRequest
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetOwnerOk() (*NestedTenantRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *AssetRequest) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableNestedTenantRequest and assigns it to the Owner field.
func (o *AssetRequest) SetOwner(v NestedTenantRequest) {
	o.Owner.Set(&v)
}

// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *AssetRequest) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *AssetRequest) UnsetOwner() {
	o.Owner.Unset()
}

// GetDelivery returns the Delivery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetDelivery() NestedDeliveryRequest {
	if o == nil || IsNil(o.Delivery.Get()) {
		var ret NestedDeliveryRequest
		return ret
	}
	return *o.Delivery.Get()
}

// GetDeliveryOk returns a tuple with the Delivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetDeliveryOk() (*NestedDeliveryRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Delivery.Get(), o.Delivery.IsSet()
}

// HasDelivery returns a boolean if a field has been set.
func (o *AssetRequest) HasDelivery() bool {
	if o != nil && o.Delivery.IsSet() {
		return true
	}

	return false
}

// SetDelivery gets a reference to the given NullableNestedDeliveryRequest and assigns it to the Delivery field.
func (o *AssetRequest) SetDelivery(v NestedDeliveryRequest) {
	o.Delivery.Set(&v)
}

// SetDeliveryNil sets the value for Delivery to be an explicit nil
func (o *AssetRequest) SetDeliveryNil() {
	o.Delivery.Set(nil)
}

// UnsetDelivery ensures that no value is present for Delivery, not even an explicit nil
func (o *AssetRequest) UnsetDelivery() {
	o.Delivery.Unset()
}

// GetPurchase returns the Purchase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetPurchase() NestedPurchaseRequest {
	if o == nil || IsNil(o.Purchase.Get()) {
		var ret NestedPurchaseRequest
		return ret
	}
	return *o.Purchase.Get()
}

// GetPurchaseOk returns a tuple with the Purchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetPurchaseOk() (*NestedPurchaseRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Purchase.Get(), o.Purchase.IsSet()
}

// HasPurchase returns a boolean if a field has been set.
func (o *AssetRequest) HasPurchase() bool {
	if o != nil && o.Purchase.IsSet() {
		return true
	}

	return false
}

// SetPurchase gets a reference to the given NullableNestedPurchaseRequest and assigns it to the Purchase field.
func (o *AssetRequest) SetPurchase(v NestedPurchaseRequest) {
	o.Purchase.Set(&v)
}

// SetPurchaseNil sets the value for Purchase to be an explicit nil
func (o *AssetRequest) SetPurchaseNil() {
	o.Purchase.Set(nil)
}

// UnsetPurchase ensures that no value is present for Purchase, not even an explicit nil
func (o *AssetRequest) UnsetPurchase() {
	o.Purchase.Unset()
}

// GetWarrantyStart returns the WarrantyStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetWarrantyStart() string {
	if o == nil || IsNil(o.WarrantyStart.Get()) {
		var ret string
		return ret
	}
	return *o.WarrantyStart.Get()
}

// GetWarrantyStartOk returns a tuple with the WarrantyStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetWarrantyStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarrantyStart.Get(), o.WarrantyStart.IsSet()
}

// HasWarrantyStart returns a boolean if a field has been set.
func (o *AssetRequest) HasWarrantyStart() bool {
	if o != nil && o.WarrantyStart.IsSet() {
		return true
	}

	return false
}

// SetWarrantyStart gets a reference to the given NullableString and assigns it to the WarrantyStart field.
func (o *AssetRequest) SetWarrantyStart(v string) {
	o.WarrantyStart.Set(&v)
}

// SetWarrantyStartNil sets the value for WarrantyStart to be an explicit nil
func (o *AssetRequest) SetWarrantyStartNil() {
	o.WarrantyStart.Set(nil)
}

// UnsetWarrantyStart ensures that no value is present for WarrantyStart, not even an explicit nil
func (o *AssetRequest) UnsetWarrantyStart() {
	o.WarrantyStart.Unset()
}

// GetWarrantyEnd returns the WarrantyEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetRequest) GetWarrantyEnd() string {
	if o == nil || IsNil(o.WarrantyEnd.Get()) {
		var ret string
		return ret
	}
	return *o.WarrantyEnd.Get()
}

// GetWarrantyEndOk returns a tuple with the WarrantyEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetRequest) GetWarrantyEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarrantyEnd.Get(), o.WarrantyEnd.IsSet()
}

// HasWarrantyEnd returns a boolean if a field has been set.
func (o *AssetRequest) HasWarrantyEnd() bool {
	if o != nil && o.WarrantyEnd.IsSet() {
		return true
	}

	return false
}

// SetWarrantyEnd gets a reference to the given NullableString and assigns it to the WarrantyEnd field.
func (o *AssetRequest) SetWarrantyEnd(v string) {
	o.WarrantyEnd.Set(&v)
}

// SetWarrantyEndNil sets the value for WarrantyEnd to be an explicit nil
func (o *AssetRequest) SetWarrantyEndNil() {
	o.WarrantyEnd.Set(nil)
}

// UnsetWarrantyEnd ensures that no value is present for WarrantyEnd, not even an explicit nil
func (o *AssetRequest) UnsetWarrantyEnd() {
	o.WarrantyEnd.Unset()
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *AssetRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *AssetRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *AssetRequest) SetComments(v string) {
	o.Comments = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AssetRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AssetRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *AssetRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *AssetRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *AssetRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *AssetRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o AssetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.AssetTag.IsSet() {
		toSerialize["asset_tag"] = o.AssetTag.Get()
	}
	if o.Serial.IsSet() {
		toSerialize["serial"] = o.Serial.Get()
	}
	toSerialize["status"] = o.Status
	if o.DeviceType.IsSet() {
		toSerialize["device_type"] = o.DeviceType.Get()
	}
	if o.Device.IsSet() {
		toSerialize["device"] = o.Device.Get()
	}
	if o.ModuleType.IsSet() {
		toSerialize["module_type"] = o.ModuleType.Get()
	}
	if o.InventoryitemType.IsSet() {
		toSerialize["inventoryitem_type"] = o.InventoryitemType.Get()
	}
	if o.Inventoryitem.IsSet() {
		toSerialize["inventoryitem"] = o.Inventoryitem.Get()
	}
	if o.Tenant.IsSet() {
		toSerialize["tenant"] = o.Tenant.Get()
	}
	if o.Contact.IsSet() {
		toSerialize["contact"] = o.Contact.Get()
	}
	if o.StorageLocation.IsSet() {
		toSerialize["storage_location"] = o.StorageLocation.Get()
	}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if o.Delivery.IsSet() {
		toSerialize["delivery"] = o.Delivery.Get()
	}
	if o.Purchase.IsSet() {
		toSerialize["purchase"] = o.Purchase.Get()
	}
	if o.WarrantyStart.IsSet() {
		toSerialize["warranty_start"] = o.WarrantyStart.Get()
	}
	if o.WarrantyEnd.IsSet() {
		toSerialize["warranty_end"] = o.WarrantyEnd.Get()
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssetRequest := _AssetRequest{}

	err = json.Unmarshal(data, &varAssetRequest)

	if err != nil {
		return err
	}

	*o = AssetRequest(varAssetRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "asset_tag")
		delete(additionalProperties, "serial")
		delete(additionalProperties, "status")
		delete(additionalProperties, "device_type")
		delete(additionalProperties, "device")
		delete(additionalProperties, "module_type")
		delete(additionalProperties, "inventoryitem_type")
		delete(additionalProperties, "inventoryitem")
		delete(additionalProperties, "tenant")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "storage_location")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "delivery")
		delete(additionalProperties, "purchase")
		delete(additionalProperties, "warranty_start")
		delete(additionalProperties, "warranty_end")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetRequest struct {
	value *AssetRequest
	isSet bool
}

func (v NullableAssetRequest) Get() *AssetRequest {
	return v.value
}

func (v *NullableAssetRequest) Set(val *AssetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetRequest(val *AssetRequest) *NullableAssetRequest {
	return &NullableAssetRequest{value: val, isSet: true}
}

func (v NullableAssetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
