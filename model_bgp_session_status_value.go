/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.8 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// BGPSessionStatusValue * `offline` - Offline * `active` - Active * `planned` - Planned * `failed` - Failed
type BGPSessionStatusValue string

// List of BGPSession_status_value
const (
	BGPSESSIONSTATUSVALUE_OFFLINE BGPSessionStatusValue = "offline"
	BGPSESSIONSTATUSVALUE_ACTIVE  BGPSessionStatusValue = "active"
	BGPSESSIONSTATUSVALUE_PLANNED BGPSessionStatusValue = "planned"
	BGPSESSIONSTATUSVALUE_FAILED  BGPSessionStatusValue = "failed"
)

// All allowed values of BGPSessionStatusValue enum
var AllowedBGPSessionStatusValueEnumValues = []BGPSessionStatusValue{
	"offline",
	"active",
	"planned",
	"failed",
}

func (v *BGPSessionStatusValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BGPSessionStatusValue(value)
	for _, existing := range AllowedBGPSessionStatusValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BGPSessionStatusValue", value)
}

// NewBGPSessionStatusValueFromValue returns a pointer to a valid BGPSessionStatusValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBGPSessionStatusValueFromValue(v string) (*BGPSessionStatusValue, error) {
	ev := BGPSessionStatusValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BGPSessionStatusValue: valid values are %v", v, AllowedBGPSessionStatusValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BGPSessionStatusValue) IsValid() bool {
	for _, existing := range AllowedBGPSessionStatusValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BGPSession_status_value value
func (v BGPSessionStatusValue) Ptr() *BGPSessionStatusValue {
	return &v
}

type NullableBGPSessionStatusValue struct {
	value *BGPSessionStatusValue
	isSet bool
}

func (v NullableBGPSessionStatusValue) Get() *BGPSessionStatusValue {
	return v.value
}

func (v *NullableBGPSessionStatusValue) Set(val *BGPSessionStatusValue) {
	v.value = val
	v.isSet = true
}

func (v NullableBGPSessionStatusValue) IsSet() bool {
	return v.isSet
}

func (v *NullableBGPSessionStatusValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBGPSessionStatusValue(val *BGPSessionStatusValue) *NullableBGPSessionStatusValue {
	return &NullableBGPSessionStatusValue{value: val, isSet: true}
}

func (v NullableBGPSessionStatusValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBGPSessionStatusValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
