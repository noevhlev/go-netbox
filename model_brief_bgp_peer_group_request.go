/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the BriefBGPPeerGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BriefBGPPeerGroupRequest{}

// BriefBGPPeerGroupRequest Adds support for custom fields and tags.
type BriefBGPPeerGroupRequest struct {
	Name                 string `json:"name"`
	Description          string `json:"description"`
	AdditionalProperties map[string]interface{}
}

type _BriefBGPPeerGroupRequest BriefBGPPeerGroupRequest

// NewBriefBGPPeerGroupRequest instantiates a new BriefBGPPeerGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBriefBGPPeerGroupRequest(name string, description string) *BriefBGPPeerGroupRequest {
	this := BriefBGPPeerGroupRequest{}
	this.Name = name
	this.Description = description
	return &this
}

// NewBriefBGPPeerGroupRequestWithDefaults instantiates a new BriefBGPPeerGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBriefBGPPeerGroupRequestWithDefaults() *BriefBGPPeerGroupRequest {
	this := BriefBGPPeerGroupRequest{}
	return &this
}

// GetName returns the Name field value
func (o *BriefBGPPeerGroupRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BriefBGPPeerGroupRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BriefBGPPeerGroupRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *BriefBGPPeerGroupRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BriefBGPPeerGroupRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BriefBGPPeerGroupRequest) SetDescription(v string) {
	o.Description = v
}

func (o BriefBGPPeerGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BriefBGPPeerGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BriefBGPPeerGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBriefBGPPeerGroupRequest := _BriefBGPPeerGroupRequest{}

	err = json.Unmarshal(data, &varBriefBGPPeerGroupRequest)

	if err != nil {
		return err
	}

	*o = BriefBGPPeerGroupRequest(varBriefBGPPeerGroupRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBriefBGPPeerGroupRequest struct {
	value *BriefBGPPeerGroupRequest
	isSet bool
}

func (v NullableBriefBGPPeerGroupRequest) Get() *BriefBGPPeerGroupRequest {
	return v.value
}

func (v *NullableBriefBGPPeerGroupRequest) Set(val *BriefBGPPeerGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBriefBGPPeerGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBriefBGPPeerGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBriefBGPPeerGroupRequest(val *BriefBGPPeerGroupRequest) *NullableBriefBGPPeerGroupRequest {
	return &NullableBriefBGPPeerGroupRequest{value: val, isSet: true}
}

func (v NullableBriefBGPPeerGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBriefBGPPeerGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
