/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the BriefCommunityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BriefCommunityRequest{}

// BriefCommunityRequest Adds support for custom fields and tags.
type BriefCommunityRequest struct {
	Description          *string `json:"description,omitempty"`
	Value                string  `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _BriefCommunityRequest BriefCommunityRequest

// NewBriefCommunityRequest instantiates a new BriefCommunityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBriefCommunityRequest(value string) *BriefCommunityRequest {
	this := BriefCommunityRequest{}
	this.Value = value
	return &this
}

// NewBriefCommunityRequestWithDefaults instantiates a new BriefCommunityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBriefCommunityRequestWithDefaults() *BriefCommunityRequest {
	this := BriefCommunityRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BriefCommunityRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BriefCommunityRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BriefCommunityRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BriefCommunityRequest) SetDescription(v string) {
	o.Description = &v
}

// GetValue returns the Value field value
func (o *BriefCommunityRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *BriefCommunityRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *BriefCommunityRequest) SetValue(v string) {
	o.Value = v
}

func (o BriefCommunityRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BriefCommunityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["value"] = o.Value

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BriefCommunityRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBriefCommunityRequest := _BriefCommunityRequest{}

	err = json.Unmarshal(data, &varBriefCommunityRequest)

	if err != nil {
		return err
	}

	*o = BriefCommunityRequest(varBriefCommunityRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBriefCommunityRequest struct {
	value *BriefCommunityRequest
	isSet bool
}

func (v NullableBriefCommunityRequest) Get() *BriefCommunityRequest {
	return v.value
}

func (v *NullableBriefCommunityRequest) Set(val *BriefCommunityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBriefCommunityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBriefCommunityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBriefCommunityRequest(val *BriefCommunityRequest) *NullableBriefCommunityRequest {
	return &NullableBriefCommunityRequest{value: val, isSet: true}
}

func (v NullableBriefCommunityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBriefCommunityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
