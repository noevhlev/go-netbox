/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.8 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the InventoryItemGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryItemGroupRequest{}

// InventoryItemGroupRequest Adds support for custom fields and tags.
type InventoryItemGroupRequest struct {
	Name                 string                                  `json:"name"`
	Parent               NullableNestedInventoryItemGroupRequest `json:"parent,omitempty"`
	Comments             *string                                 `json:"comments,omitempty"`
	Tags                 []NestedTagRequest                      `json:"tags,omitempty"`
	CustomFields         map[string]interface{}                  `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InventoryItemGroupRequest InventoryItemGroupRequest

// NewInventoryItemGroupRequest instantiates a new InventoryItemGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryItemGroupRequest(name string) *InventoryItemGroupRequest {
	this := InventoryItemGroupRequest{}
	this.Name = name
	return &this
}

// NewInventoryItemGroupRequestWithDefaults instantiates a new InventoryItemGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryItemGroupRequestWithDefaults() *InventoryItemGroupRequest {
	this := InventoryItemGroupRequest{}
	return &this
}

// GetName returns the Name field value
func (o *InventoryItemGroupRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InventoryItemGroupRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InventoryItemGroupRequest) SetName(v string) {
	o.Name = v
}

// GetParent returns the Parent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InventoryItemGroupRequest) GetParent() NestedInventoryItemGroupRequest {
	if o == nil || IsNil(o.Parent.Get()) {
		var ret NestedInventoryItemGroupRequest
		return ret
	}
	return *o.Parent.Get()
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InventoryItemGroupRequest) GetParentOk() (*NestedInventoryItemGroupRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parent.Get(), o.Parent.IsSet()
}

// HasParent returns a boolean if a field has been set.
func (o *InventoryItemGroupRequest) HasParent() bool {
	if o != nil && o.Parent.IsSet() {
		return true
	}

	return false
}

// SetParent gets a reference to the given NullableNestedInventoryItemGroupRequest and assigns it to the Parent field.
func (o *InventoryItemGroupRequest) SetParent(v NestedInventoryItemGroupRequest) {
	o.Parent.Set(&v)
}

// SetParentNil sets the value for Parent to be an explicit nil
func (o *InventoryItemGroupRequest) SetParentNil() {
	o.Parent.Set(nil)
}

// UnsetParent ensures that no value is present for Parent, not even an explicit nil
func (o *InventoryItemGroupRequest) UnsetParent() {
	o.Parent.Unset()
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *InventoryItemGroupRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryItemGroupRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *InventoryItemGroupRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *InventoryItemGroupRequest) SetComments(v string) {
	o.Comments = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InventoryItemGroupRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryItemGroupRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InventoryItemGroupRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *InventoryItemGroupRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *InventoryItemGroupRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryItemGroupRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *InventoryItemGroupRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *InventoryItemGroupRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o InventoryItemGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryItemGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Parent.IsSet() {
		toSerialize["parent"] = o.Parent.Get()
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InventoryItemGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInventoryItemGroupRequest := _InventoryItemGroupRequest{}

	err = json.Unmarshal(data, &varInventoryItemGroupRequest)

	if err != nil {
		return err
	}

	*o = InventoryItemGroupRequest(varInventoryItemGroupRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "parent")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInventoryItemGroupRequest struct {
	value *InventoryItemGroupRequest
	isSet bool
}

func (v NullableInventoryItemGroupRequest) Get() *InventoryItemGroupRequest {
	return v.value
}

func (v *NullableInventoryItemGroupRequest) Set(val *InventoryItemGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryItemGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryItemGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryItemGroupRequest(val *InventoryItemGroupRequest) *NullableInventoryItemGroupRequest {
	return &NullableInventoryItemGroupRequest{value: val, isSet: true}
}

func (v NullableInventoryItemGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryItemGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
