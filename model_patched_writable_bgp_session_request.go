/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// checks if the PatchedWritableBGPSessionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWritableBGPSessionRequest{}

// PatchedWritableBGPSessionRequest Adds support for custom fields and tags.
type PatchedWritableBGPSessionRequest struct {
	Tags                 []NestedTagRequest               `json:"tags,omitempty"`
	CustomFields         map[string]interface{}           `json:"custom_fields,omitempty"`
	Status               *BGPSessionStatusValue           `json:"status,omitempty"`
	Site                 NullableBriefSiteRequest         `json:"site,omitempty"`
	Tenant               NullableBriefTenantRequest       `json:"tenant,omitempty"`
	Device               NullableBriefDeviceRequest       `json:"device,omitempty"`
	LocalAddress         *BriefIPAddressRequest           `json:"local_address,omitempty"`
	RemoteAddress        *BriefIPAddressRequest           `json:"remote_address,omitempty"`
	LocalAs              *BriefASNRequest                 `json:"local_as,omitempty"`
	RemoteAs             *BriefASNRequest                 `json:"remote_as,omitempty"`
	PeerGroup            NullableBriefBGPPeerGroupRequest `json:"peer_group,omitempty"`
	ImportPolicies       []*int32                         `json:"import_policies,omitempty"`
	ExportPolicies       []*int32                         `json:"export_policies,omitempty"`
	PrefixListIn         NullableBriefPrefixListRequest   `json:"prefix_list_in,omitempty"`
	PrefixListOut        NullableBriefPrefixListRequest   `json:"prefix_list_out,omitempty"`
	Name                 NullableString                   `json:"name,omitempty"`
	Description          *string                          `json:"description,omitempty"`
	Comments             *string                          `json:"comments,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedWritableBGPSessionRequest PatchedWritableBGPSessionRequest

// NewPatchedWritableBGPSessionRequest instantiates a new PatchedWritableBGPSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableBGPSessionRequest() *PatchedWritableBGPSessionRequest {
	this := PatchedWritableBGPSessionRequest{}
	return &this
}

// NewPatchedWritableBGPSessionRequestWithDefaults instantiates a new PatchedWritableBGPSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableBGPSessionRequestWithDefaults() *PatchedWritableBGPSessionRequest {
	this := PatchedWritableBGPSessionRequest{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *PatchedWritableBGPSessionRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedWritableBGPSessionRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetStatus() BGPSessionStatusValue {
	if o == nil || IsNil(o.Status) {
		var ret BGPSessionStatusValue
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetStatusOk() (*BGPSessionStatusValue, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BGPSessionStatusValue and assigns it to the Status field.
func (o *PatchedWritableBGPSessionRequest) SetStatus(v BGPSessionStatusValue) {
	o.Status = &v
}

// GetSite returns the Site field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableBGPSessionRequest) GetSite() BriefSiteRequest {
	if o == nil || IsNil(o.Site.Get()) {
		var ret BriefSiteRequest
		return ret
	}
	return *o.Site.Get()
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableBGPSessionRequest) GetSiteOk() (*BriefSiteRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Site.Get(), o.Site.IsSet()
}

// HasSite returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasSite() bool {
	if o != nil && o.Site.IsSet() {
		return true
	}

	return false
}

// SetSite gets a reference to the given NullableBriefSiteRequest and assigns it to the Site field.
func (o *PatchedWritableBGPSessionRequest) SetSite(v BriefSiteRequest) {
	o.Site.Set(&v)
}

// SetSiteNil sets the value for Site to be an explicit nil
func (o *PatchedWritableBGPSessionRequest) SetSiteNil() {
	o.Site.Set(nil)
}

// UnsetSite ensures that no value is present for Site, not even an explicit nil
func (o *PatchedWritableBGPSessionRequest) UnsetSite() {
	o.Site.Unset()
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableBGPSessionRequest) GetTenant() BriefTenantRequest {
	if o == nil || IsNil(o.Tenant.Get()) {
		var ret BriefTenantRequest
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableBGPSessionRequest) GetTenantOk() (*BriefTenantRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableBriefTenantRequest and assigns it to the Tenant field.
func (o *PatchedWritableBGPSessionRequest) SetTenant(v BriefTenantRequest) {
	o.Tenant.Set(&v)
}

// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *PatchedWritableBGPSessionRequest) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *PatchedWritableBGPSessionRequest) UnsetTenant() {
	o.Tenant.Unset()
}

// GetDevice returns the Device field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableBGPSessionRequest) GetDevice() BriefDeviceRequest {
	if o == nil || IsNil(o.Device.Get()) {
		var ret BriefDeviceRequest
		return ret
	}
	return *o.Device.Get()
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableBGPSessionRequest) GetDeviceOk() (*BriefDeviceRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Device.Get(), o.Device.IsSet()
}

// HasDevice returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasDevice() bool {
	if o != nil && o.Device.IsSet() {
		return true
	}

	return false
}

// SetDevice gets a reference to the given NullableBriefDeviceRequest and assigns it to the Device field.
func (o *PatchedWritableBGPSessionRequest) SetDevice(v BriefDeviceRequest) {
	o.Device.Set(&v)
}

// SetDeviceNil sets the value for Device to be an explicit nil
func (o *PatchedWritableBGPSessionRequest) SetDeviceNil() {
	o.Device.Set(nil)
}

// UnsetDevice ensures that no value is present for Device, not even an explicit nil
func (o *PatchedWritableBGPSessionRequest) UnsetDevice() {
	o.Device.Unset()
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetLocalAddress() BriefIPAddressRequest {
	if o == nil || IsNil(o.LocalAddress) {
		var ret BriefIPAddressRequest
		return ret
	}
	return *o.LocalAddress
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetLocalAddressOk() (*BriefIPAddressRequest, bool) {
	if o == nil || IsNil(o.LocalAddress) {
		return nil, false
	}
	return o.LocalAddress, true
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasLocalAddress() bool {
	if o != nil && !IsNil(o.LocalAddress) {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given BriefIPAddressRequest and assigns it to the LocalAddress field.
func (o *PatchedWritableBGPSessionRequest) SetLocalAddress(v BriefIPAddressRequest) {
	o.LocalAddress = &v
}

// GetRemoteAddress returns the RemoteAddress field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetRemoteAddress() BriefIPAddressRequest {
	if o == nil || IsNil(o.RemoteAddress) {
		var ret BriefIPAddressRequest
		return ret
	}
	return *o.RemoteAddress
}

// GetRemoteAddressOk returns a tuple with the RemoteAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetRemoteAddressOk() (*BriefIPAddressRequest, bool) {
	if o == nil || IsNil(o.RemoteAddress) {
		return nil, false
	}
	return o.RemoteAddress, true
}

// HasRemoteAddress returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasRemoteAddress() bool {
	if o != nil && !IsNil(o.RemoteAddress) {
		return true
	}

	return false
}

// SetRemoteAddress gets a reference to the given BriefIPAddressRequest and assigns it to the RemoteAddress field.
func (o *PatchedWritableBGPSessionRequest) SetRemoteAddress(v BriefIPAddressRequest) {
	o.RemoteAddress = &v
}

// GetLocalAs returns the LocalAs field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetLocalAs() BriefASNRequest {
	if o == nil || IsNil(o.LocalAs) {
		var ret BriefASNRequest
		return ret
	}
	return *o.LocalAs
}

// GetLocalAsOk returns a tuple with the LocalAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetLocalAsOk() (*BriefASNRequest, bool) {
	if o == nil || IsNil(o.LocalAs) {
		return nil, false
	}
	return o.LocalAs, true
}

// HasLocalAs returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasLocalAs() bool {
	if o != nil && !IsNil(o.LocalAs) {
		return true
	}

	return false
}

// SetLocalAs gets a reference to the given BriefASNRequest and assigns it to the LocalAs field.
func (o *PatchedWritableBGPSessionRequest) SetLocalAs(v BriefASNRequest) {
	o.LocalAs = &v
}

// GetRemoteAs returns the RemoteAs field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetRemoteAs() BriefASNRequest {
	if o == nil || IsNil(o.RemoteAs) {
		var ret BriefASNRequest
		return ret
	}
	return *o.RemoteAs
}

// GetRemoteAsOk returns a tuple with the RemoteAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetRemoteAsOk() (*BriefASNRequest, bool) {
	if o == nil || IsNil(o.RemoteAs) {
		return nil, false
	}
	return o.RemoteAs, true
}

// HasRemoteAs returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasRemoteAs() bool {
	if o != nil && !IsNil(o.RemoteAs) {
		return true
	}

	return false
}

// SetRemoteAs gets a reference to the given BriefASNRequest and assigns it to the RemoteAs field.
func (o *PatchedWritableBGPSessionRequest) SetRemoteAs(v BriefASNRequest) {
	o.RemoteAs = &v
}

// GetPeerGroup returns the PeerGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableBGPSessionRequest) GetPeerGroup() BriefBGPPeerGroupRequest {
	if o == nil || IsNil(o.PeerGroup.Get()) {
		var ret BriefBGPPeerGroupRequest
		return ret
	}
	return *o.PeerGroup.Get()
}

// GetPeerGroupOk returns a tuple with the PeerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableBGPSessionRequest) GetPeerGroupOk() (*BriefBGPPeerGroupRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.PeerGroup.Get(), o.PeerGroup.IsSet()
}

// HasPeerGroup returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasPeerGroup() bool {
	if o != nil && o.PeerGroup.IsSet() {
		return true
	}

	return false
}

// SetPeerGroup gets a reference to the given NullableBriefBGPPeerGroupRequest and assigns it to the PeerGroup field.
func (o *PatchedWritableBGPSessionRequest) SetPeerGroup(v BriefBGPPeerGroupRequest) {
	o.PeerGroup.Set(&v)
}

// SetPeerGroupNil sets the value for PeerGroup to be an explicit nil
func (o *PatchedWritableBGPSessionRequest) SetPeerGroupNil() {
	o.PeerGroup.Set(nil)
}

// UnsetPeerGroup ensures that no value is present for PeerGroup, not even an explicit nil
func (o *PatchedWritableBGPSessionRequest) UnsetPeerGroup() {
	o.PeerGroup.Unset()
}

// GetImportPolicies returns the ImportPolicies field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetImportPolicies() []*int32 {
	if o == nil || IsNil(o.ImportPolicies) {
		var ret []*int32
		return ret
	}
	return o.ImportPolicies
}

// GetImportPoliciesOk returns a tuple with the ImportPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetImportPoliciesOk() ([]*int32, bool) {
	if o == nil || IsNil(o.ImportPolicies) {
		return nil, false
	}
	return o.ImportPolicies, true
}

// HasImportPolicies returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasImportPolicies() bool {
	if o != nil && !IsNil(o.ImportPolicies) {
		return true
	}

	return false
}

// SetImportPolicies gets a reference to the given []*int32 and assigns it to the ImportPolicies field.
func (o *PatchedWritableBGPSessionRequest) SetImportPolicies(v []*int32) {
	o.ImportPolicies = v
}

// GetExportPolicies returns the ExportPolicies field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetExportPolicies() []*int32 {
	if o == nil || IsNil(o.ExportPolicies) {
		var ret []*int32
		return ret
	}
	return o.ExportPolicies
}

// GetExportPoliciesOk returns a tuple with the ExportPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetExportPoliciesOk() ([]*int32, bool) {
	if o == nil || IsNil(o.ExportPolicies) {
		return nil, false
	}
	return o.ExportPolicies, true
}

// HasExportPolicies returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasExportPolicies() bool {
	if o != nil && !IsNil(o.ExportPolicies) {
		return true
	}

	return false
}

// SetExportPolicies gets a reference to the given []*int32 and assigns it to the ExportPolicies field.
func (o *PatchedWritableBGPSessionRequest) SetExportPolicies(v []*int32) {
	o.ExportPolicies = v
}

// GetPrefixListIn returns the PrefixListIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableBGPSessionRequest) GetPrefixListIn() BriefPrefixListRequest {
	if o == nil || IsNil(o.PrefixListIn.Get()) {
		var ret BriefPrefixListRequest
		return ret
	}
	return *o.PrefixListIn.Get()
}

// GetPrefixListInOk returns a tuple with the PrefixListIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableBGPSessionRequest) GetPrefixListInOk() (*BriefPrefixListRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrefixListIn.Get(), o.PrefixListIn.IsSet()
}

// HasPrefixListIn returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasPrefixListIn() bool {
	if o != nil && o.PrefixListIn.IsSet() {
		return true
	}

	return false
}

// SetPrefixListIn gets a reference to the given NullableBriefPrefixListRequest and assigns it to the PrefixListIn field.
func (o *PatchedWritableBGPSessionRequest) SetPrefixListIn(v BriefPrefixListRequest) {
	o.PrefixListIn.Set(&v)
}

// SetPrefixListInNil sets the value for PrefixListIn to be an explicit nil
func (o *PatchedWritableBGPSessionRequest) SetPrefixListInNil() {
	o.PrefixListIn.Set(nil)
}

// UnsetPrefixListIn ensures that no value is present for PrefixListIn, not even an explicit nil
func (o *PatchedWritableBGPSessionRequest) UnsetPrefixListIn() {
	o.PrefixListIn.Unset()
}

// GetPrefixListOut returns the PrefixListOut field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableBGPSessionRequest) GetPrefixListOut() BriefPrefixListRequest {
	if o == nil || IsNil(o.PrefixListOut.Get()) {
		var ret BriefPrefixListRequest
		return ret
	}
	return *o.PrefixListOut.Get()
}

// GetPrefixListOutOk returns a tuple with the PrefixListOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableBGPSessionRequest) GetPrefixListOutOk() (*BriefPrefixListRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrefixListOut.Get(), o.PrefixListOut.IsSet()
}

// HasPrefixListOut returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasPrefixListOut() bool {
	if o != nil && o.PrefixListOut.IsSet() {
		return true
	}

	return false
}

// SetPrefixListOut gets a reference to the given NullableBriefPrefixListRequest and assigns it to the PrefixListOut field.
func (o *PatchedWritableBGPSessionRequest) SetPrefixListOut(v BriefPrefixListRequest) {
	o.PrefixListOut.Set(&v)
}

// SetPrefixListOutNil sets the value for PrefixListOut to be an explicit nil
func (o *PatchedWritableBGPSessionRequest) SetPrefixListOutNil() {
	o.PrefixListOut.Set(nil)
}

// UnsetPrefixListOut ensures that no value is present for PrefixListOut, not even an explicit nil
func (o *PatchedWritableBGPSessionRequest) UnsetPrefixListOut() {
	o.PrefixListOut.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableBGPSessionRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableBGPSessionRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *PatchedWritableBGPSessionRequest) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *PatchedWritableBGPSessionRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *PatchedWritableBGPSessionRequest) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedWritableBGPSessionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedWritableBGPSessionRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableBGPSessionRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedWritableBGPSessionRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedWritableBGPSessionRequest) SetComments(v string) {
	o.Comments = &v
}

func (o PatchedWritableBGPSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWritableBGPSessionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Site.IsSet() {
		toSerialize["site"] = o.Site.Get()
	}
	if o.Tenant.IsSet() {
		toSerialize["tenant"] = o.Tenant.Get()
	}
	if o.Device.IsSet() {
		toSerialize["device"] = o.Device.Get()
	}
	if !IsNil(o.LocalAddress) {
		toSerialize["local_address"] = o.LocalAddress
	}
	if !IsNil(o.RemoteAddress) {
		toSerialize["remote_address"] = o.RemoteAddress
	}
	if !IsNil(o.LocalAs) {
		toSerialize["local_as"] = o.LocalAs
	}
	if !IsNil(o.RemoteAs) {
		toSerialize["remote_as"] = o.RemoteAs
	}
	if o.PeerGroup.IsSet() {
		toSerialize["peer_group"] = o.PeerGroup.Get()
	}
	if !IsNil(o.ImportPolicies) {
		toSerialize["import_policies"] = o.ImportPolicies
	}
	if !IsNil(o.ExportPolicies) {
		toSerialize["export_policies"] = o.ExportPolicies
	}
	if o.PrefixListIn.IsSet() {
		toSerialize["prefix_list_in"] = o.PrefixListIn.Get()
	}
	if o.PrefixListOut.IsSet() {
		toSerialize["prefix_list_out"] = o.PrefixListOut.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedWritableBGPSessionRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedWritableBGPSessionRequest := _PatchedWritableBGPSessionRequest{}

	err = json.Unmarshal(data, &varPatchedWritableBGPSessionRequest)

	if err != nil {
		return err
	}

	*o = PatchedWritableBGPSessionRequest(varPatchedWritableBGPSessionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "status")
		delete(additionalProperties, "site")
		delete(additionalProperties, "tenant")
		delete(additionalProperties, "device")
		delete(additionalProperties, "local_address")
		delete(additionalProperties, "remote_address")
		delete(additionalProperties, "local_as")
		delete(additionalProperties, "remote_as")
		delete(additionalProperties, "peer_group")
		delete(additionalProperties, "import_policies")
		delete(additionalProperties, "export_policies")
		delete(additionalProperties, "prefix_list_in")
		delete(additionalProperties, "prefix_list_out")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "comments")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedWritableBGPSessionRequest struct {
	value *PatchedWritableBGPSessionRequest
	isSet bool
}

func (v NullablePatchedWritableBGPSessionRequest) Get() *PatchedWritableBGPSessionRequest {
	return v.value
}

func (v *NullablePatchedWritableBGPSessionRequest) Set(val *PatchedWritableBGPSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableBGPSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableBGPSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableBGPSessionRequest(val *PatchedWritableBGPSessionRequest) *NullablePatchedWritableBGPSessionRequest {
	return &NullablePatchedWritableBGPSessionRequest{value: val, isSet: true}
}

func (v NullablePatchedWritableBGPSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableBGPSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
