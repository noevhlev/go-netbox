/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.8 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// checks if the PatchedWritableCommunityListRuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedWritableCommunityListRuleRequest{}

// PatchedWritableCommunityListRuleRequest Adds support for custom fields and tags.
type PatchedWritableCommunityListRuleRequest struct {
	Tags                 []NestedTagRequest       `json:"tags,omitempty"`
	CustomFields         map[string]interface{}   `json:"custom_fields,omitempty"`
	CommunityList        *int32                   `json:"community_list,omitempty"`
	Action               *CommunityListRuleAction `json:"action,omitempty"`
	Community            *int32                   `json:"community,omitempty"`
	Comments             *string                  `json:"comments,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedWritableCommunityListRuleRequest PatchedWritableCommunityListRuleRequest

// NewPatchedWritableCommunityListRuleRequest instantiates a new PatchedWritableCommunityListRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableCommunityListRuleRequest() *PatchedWritableCommunityListRuleRequest {
	this := PatchedWritableCommunityListRuleRequest{}
	return &this
}

// NewPatchedWritableCommunityListRuleRequestWithDefaults instantiates a new PatchedWritableCommunityListRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableCommunityListRuleRequestWithDefaults() *PatchedWritableCommunityListRuleRequest {
	this := PatchedWritableCommunityListRuleRequest{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedWritableCommunityListRuleRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCommunityListRuleRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedWritableCommunityListRuleRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *PatchedWritableCommunityListRuleRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedWritableCommunityListRuleRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCommunityListRuleRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedWritableCommunityListRuleRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedWritableCommunityListRuleRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetCommunityList returns the CommunityList field value if set, zero value otherwise.
func (o *PatchedWritableCommunityListRuleRequest) GetCommunityList() int32 {
	if o == nil || IsNil(o.CommunityList) {
		var ret int32
		return ret
	}
	return *o.CommunityList
}

// GetCommunityListOk returns a tuple with the CommunityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCommunityListRuleRequest) GetCommunityListOk() (*int32, bool) {
	if o == nil || IsNil(o.CommunityList) {
		return nil, false
	}
	return o.CommunityList, true
}

// HasCommunityList returns a boolean if a field has been set.
func (o *PatchedWritableCommunityListRuleRequest) HasCommunityList() bool {
	if o != nil && !IsNil(o.CommunityList) {
		return true
	}

	return false
}

// SetCommunityList gets a reference to the given int32 and assigns it to the CommunityList field.
func (o *PatchedWritableCommunityListRuleRequest) SetCommunityList(v int32) {
	o.CommunityList = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *PatchedWritableCommunityListRuleRequest) GetAction() CommunityListRuleAction {
	if o == nil || IsNil(o.Action) {
		var ret CommunityListRuleAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCommunityListRuleRequest) GetActionOk() (*CommunityListRuleAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *PatchedWritableCommunityListRuleRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given CommunityListRuleAction and assigns it to the Action field.
func (o *PatchedWritableCommunityListRuleRequest) SetAction(v CommunityListRuleAction) {
	o.Action = &v
}

// GetCommunity returns the Community field value if set, zero value otherwise.
func (o *PatchedWritableCommunityListRuleRequest) GetCommunity() int32 {
	if o == nil || IsNil(o.Community) {
		var ret int32
		return ret
	}
	return *o.Community
}

// GetCommunityOk returns a tuple with the Community field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCommunityListRuleRequest) GetCommunityOk() (*int32, bool) {
	if o == nil || IsNil(o.Community) {
		return nil, false
	}
	return o.Community, true
}

// HasCommunity returns a boolean if a field has been set.
func (o *PatchedWritableCommunityListRuleRequest) HasCommunity() bool {
	if o != nil && !IsNil(o.Community) {
		return true
	}

	return false
}

// SetCommunity gets a reference to the given int32 and assigns it to the Community field.
func (o *PatchedWritableCommunityListRuleRequest) SetCommunity(v int32) {
	o.Community = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedWritableCommunityListRuleRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableCommunityListRuleRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedWritableCommunityListRuleRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedWritableCommunityListRuleRequest) SetComments(v string) {
	o.Comments = &v
}

func (o PatchedWritableCommunityListRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedWritableCommunityListRuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if !IsNil(o.CommunityList) {
		toSerialize["community_list"] = o.CommunityList
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Community) {
		toSerialize["community"] = o.Community
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedWritableCommunityListRuleRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedWritableCommunityListRuleRequest := _PatchedWritableCommunityListRuleRequest{}

	err = json.Unmarshal(data, &varPatchedWritableCommunityListRuleRequest)

	if err != nil {
		return err
	}

	*o = PatchedWritableCommunityListRuleRequest(varPatchedWritableCommunityListRuleRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "community_list")
		delete(additionalProperties, "action")
		delete(additionalProperties, "community")
		delete(additionalProperties, "comments")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedWritableCommunityListRuleRequest struct {
	value *PatchedWritableCommunityListRuleRequest
	isSet bool
}

func (v NullablePatchedWritableCommunityListRuleRequest) Get() *PatchedWritableCommunityListRuleRequest {
	return v.value
}

func (v *NullablePatchedWritableCommunityListRuleRequest) Set(val *PatchedWritableCommunityListRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableCommunityListRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableCommunityListRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableCommunityListRuleRequest(val *PatchedWritableCommunityListRuleRequest) *NullablePatchedWritableCommunityListRuleRequest {
	return &NullablePatchedWritableCommunityListRuleRequest{value: val, isSet: true}
}

func (v NullablePatchedWritableCommunityListRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableCommunityListRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
