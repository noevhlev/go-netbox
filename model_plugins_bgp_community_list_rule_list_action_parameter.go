/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// PluginsBgpCommunityListRuleListActionParameter the model 'PluginsBgpCommunityListRuleListActionParameter'
type PluginsBgpCommunityListRuleListActionParameter string

// List of plugins_bgp_community_list_rule_list_action_parameter
const (
	PLUGINSBGPCOMMUNITYLISTRULELISTACTIONPARAMETER_DENY   PluginsBgpCommunityListRuleListActionParameter = "deny"
	PLUGINSBGPCOMMUNITYLISTRULELISTACTIONPARAMETER_PERMIT PluginsBgpCommunityListRuleListActionParameter = "permit"
)

// All allowed values of PluginsBgpCommunityListRuleListActionParameter enum
var AllowedPluginsBgpCommunityListRuleListActionParameterEnumValues = []PluginsBgpCommunityListRuleListActionParameter{
	"deny",
	"permit",
}

func (v *PluginsBgpCommunityListRuleListActionParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PluginsBgpCommunityListRuleListActionParameter(value)
	for _, existing := range AllowedPluginsBgpCommunityListRuleListActionParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PluginsBgpCommunityListRuleListActionParameter", value)
}

// NewPluginsBgpCommunityListRuleListActionParameterFromValue returns a pointer to a valid PluginsBgpCommunityListRuleListActionParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPluginsBgpCommunityListRuleListActionParameterFromValue(v string) (*PluginsBgpCommunityListRuleListActionParameter, error) {
	ev := PluginsBgpCommunityListRuleListActionParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PluginsBgpCommunityListRuleListActionParameter: valid values are %v", v, AllowedPluginsBgpCommunityListRuleListActionParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PluginsBgpCommunityListRuleListActionParameter) IsValid() bool {
	for _, existing := range AllowedPluginsBgpCommunityListRuleListActionParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to plugins_bgp_community_list_rule_list_action_parameter value
func (v PluginsBgpCommunityListRuleListActionParameter) Ptr() *PluginsBgpCommunityListRuleListActionParameter {
	return &v
}

type NullablePluginsBgpCommunityListRuleListActionParameter struct {
	value *PluginsBgpCommunityListRuleListActionParameter
	isSet bool
}

func (v NullablePluginsBgpCommunityListRuleListActionParameter) Get() *PluginsBgpCommunityListRuleListActionParameter {
	return v.value
}

func (v *NullablePluginsBgpCommunityListRuleListActionParameter) Set(val *PluginsBgpCommunityListRuleListActionParameter) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginsBgpCommunityListRuleListActionParameter) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginsBgpCommunityListRuleListActionParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginsBgpCommunityListRuleListActionParameter(val *PluginsBgpCommunityListRuleListActionParameter) *NullablePluginsBgpCommunityListRuleListActionParameter {
	return &NullablePluginsBgpCommunityListRuleListActionParameter{value: val, isSet: true}
}

func (v NullablePluginsBgpCommunityListRuleListActionParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginsBgpCommunityListRuleListActionParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
