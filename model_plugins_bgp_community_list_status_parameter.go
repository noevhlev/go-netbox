/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// PluginsBgpCommunityListStatusParameter the model 'PluginsBgpCommunityListStatusParameter'
type PluginsBgpCommunityListStatusParameter string

// List of plugins_bgp_community_list_status_parameter
const (
	PLUGINSBGPCOMMUNITYLISTSTATUSPARAMETER_ACTIVE     PluginsBgpCommunityListStatusParameter = "active"
	PLUGINSBGPCOMMUNITYLISTSTATUSPARAMETER_DEPRECATED PluginsBgpCommunityListStatusParameter = "deprecated"
	PLUGINSBGPCOMMUNITYLISTSTATUSPARAMETER_RESERVED   PluginsBgpCommunityListStatusParameter = "reserved"
)

// All allowed values of PluginsBgpCommunityListStatusParameter enum
var AllowedPluginsBgpCommunityListStatusParameterEnumValues = []PluginsBgpCommunityListStatusParameter{
	"active",
	"deprecated",
	"reserved",
}

func (v *PluginsBgpCommunityListStatusParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PluginsBgpCommunityListStatusParameter(value)
	for _, existing := range AllowedPluginsBgpCommunityListStatusParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PluginsBgpCommunityListStatusParameter", value)
}

// NewPluginsBgpCommunityListStatusParameterFromValue returns a pointer to a valid PluginsBgpCommunityListStatusParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPluginsBgpCommunityListStatusParameterFromValue(v string) (*PluginsBgpCommunityListStatusParameter, error) {
	ev := PluginsBgpCommunityListStatusParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PluginsBgpCommunityListStatusParameter: valid values are %v", v, AllowedPluginsBgpCommunityListStatusParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PluginsBgpCommunityListStatusParameter) IsValid() bool {
	for _, existing := range AllowedPluginsBgpCommunityListStatusParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to plugins_bgp_community_list_status_parameter value
func (v PluginsBgpCommunityListStatusParameter) Ptr() *PluginsBgpCommunityListStatusParameter {
	return &v
}

type NullablePluginsBgpCommunityListStatusParameter struct {
	value *PluginsBgpCommunityListStatusParameter
	isSet bool
}

func (v NullablePluginsBgpCommunityListStatusParameter) Get() *PluginsBgpCommunityListStatusParameter {
	return v.value
}

func (v *NullablePluginsBgpCommunityListStatusParameter) Set(val *PluginsBgpCommunityListStatusParameter) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginsBgpCommunityListStatusParameter) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginsBgpCommunityListStatusParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginsBgpCommunityListStatusParameter(val *PluginsBgpCommunityListStatusParameter) *NullablePluginsBgpCommunityListStatusParameter {
	return &NullablePluginsBgpCommunityListStatusParameter{value: val, isSet: true}
}

func (v NullablePluginsBgpCommunityListStatusParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginsBgpCommunityListStatusParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
