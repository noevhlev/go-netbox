/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.8 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the WritableDeliveryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WritableDeliveryRequest{}

// WritableDeliveryRequest Adds support for custom fields and tags.
type WritableDeliveryRequest struct {
	// Purchase that this delivery is part of
	Purchase int32  `json:"purchase"`
	Name     string `json:"name"`
	// Date when this delivery was made
	Date        NullableString `json:"date,omitempty"`
	Description *string        `json:"description,omitempty"`
	Comments    *string        `json:"comments,omitempty"`
	// Contact that accepted this delivery
	ReceivingContact     NullableInt32          `json:"receiving_contact,omitempty"`
	Tags                 []NestedTagRequest     `json:"tags,omitempty"`
	CustomFields         map[string]interface{} `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WritableDeliveryRequest WritableDeliveryRequest

// NewWritableDeliveryRequest instantiates a new WritableDeliveryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableDeliveryRequest(purchase int32, name string) *WritableDeliveryRequest {
	this := WritableDeliveryRequest{}
	this.Purchase = purchase
	this.Name = name
	return &this
}

// NewWritableDeliveryRequestWithDefaults instantiates a new WritableDeliveryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableDeliveryRequestWithDefaults() *WritableDeliveryRequest {
	this := WritableDeliveryRequest{}
	return &this
}

// GetPurchase returns the Purchase field value
func (o *WritableDeliveryRequest) GetPurchase() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Purchase
}

// GetPurchaseOk returns a tuple with the Purchase field value
// and a boolean to check if the value has been set.
func (o *WritableDeliveryRequest) GetPurchaseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Purchase, true
}

// SetPurchase sets field value
func (o *WritableDeliveryRequest) SetPurchase(v int32) {
	o.Purchase = v
}

// GetName returns the Name field value
func (o *WritableDeliveryRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WritableDeliveryRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WritableDeliveryRequest) SetName(v string) {
	o.Name = v
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeliveryRequest) GetDate() string {
	if o == nil || IsNil(o.Date.Get()) {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeliveryRequest) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *WritableDeliveryRequest) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *WritableDeliveryRequest) SetDate(v string) {
	o.Date.Set(&v)
}

// SetDateNil sets the value for Date to be an explicit nil
func (o *WritableDeliveryRequest) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *WritableDeliveryRequest) UnsetDate() {
	o.Date.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WritableDeliveryRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeliveryRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WritableDeliveryRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WritableDeliveryRequest) SetDescription(v string) {
	o.Description = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *WritableDeliveryRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeliveryRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *WritableDeliveryRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *WritableDeliveryRequest) SetComments(v string) {
	o.Comments = &v
}

// GetReceivingContact returns the ReceivingContact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableDeliveryRequest) GetReceivingContact() int32 {
	if o == nil || IsNil(o.ReceivingContact.Get()) {
		var ret int32
		return ret
	}
	return *o.ReceivingContact.Get()
}

// GetReceivingContactOk returns a tuple with the ReceivingContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableDeliveryRequest) GetReceivingContactOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceivingContact.Get(), o.ReceivingContact.IsSet()
}

// HasReceivingContact returns a boolean if a field has been set.
func (o *WritableDeliveryRequest) HasReceivingContact() bool {
	if o != nil && o.ReceivingContact.IsSet() {
		return true
	}

	return false
}

// SetReceivingContact gets a reference to the given NullableInt32 and assigns it to the ReceivingContact field.
func (o *WritableDeliveryRequest) SetReceivingContact(v int32) {
	o.ReceivingContact.Set(&v)
}

// SetReceivingContactNil sets the value for ReceivingContact to be an explicit nil
func (o *WritableDeliveryRequest) SetReceivingContactNil() {
	o.ReceivingContact.Set(nil)
}

// UnsetReceivingContact ensures that no value is present for ReceivingContact, not even an explicit nil
func (o *WritableDeliveryRequest) UnsetReceivingContact() {
	o.ReceivingContact.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WritableDeliveryRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeliveryRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WritableDeliveryRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *WritableDeliveryRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *WritableDeliveryRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeliveryRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *WritableDeliveryRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *WritableDeliveryRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o WritableDeliveryRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WritableDeliveryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["purchase"] = o.Purchase
	toSerialize["name"] = o.Name
	if o.Date.IsSet() {
		toSerialize["date"] = o.Date.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if o.ReceivingContact.IsSet() {
		toSerialize["receiving_contact"] = o.ReceivingContact.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WritableDeliveryRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"purchase",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWritableDeliveryRequest := _WritableDeliveryRequest{}

	err = json.Unmarshal(data, &varWritableDeliveryRequest)

	if err != nil {
		return err
	}

	*o = WritableDeliveryRequest(varWritableDeliveryRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "purchase")
		delete(additionalProperties, "name")
		delete(additionalProperties, "date")
		delete(additionalProperties, "description")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "receiving_contact")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWritableDeliveryRequest struct {
	value *WritableDeliveryRequest
	isSet bool
}

func (v NullableWritableDeliveryRequest) Get() *WritableDeliveryRequest {
	return v.value
}

func (v *NullableWritableDeliveryRequest) Set(val *WritableDeliveryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableDeliveryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableDeliveryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableDeliveryRequest(val *WritableDeliveryRequest) *NullableWritableDeliveryRequest {
	return &NullableWritableDeliveryRequest{value: val, isSet: true}
}

func (v NullableWritableDeliveryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableDeliveryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
