/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.7.8 (3.7)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// checks if the WritableInventoryItemTypeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WritableInventoryItemTypeRequest{}

// WritableInventoryItemTypeRequest Adds support for custom fields and tags.
type WritableInventoryItemTypeRequest struct {
	Model        string `json:"model"`
	Slug         string `json:"slug"`
	Manufacturer int32  `json:"manufacturer"`
	// Discrete part number (optional)
	PartNumber           *string                `json:"part_number,omitempty"`
	InventoryitemGroup   NullableInt32          `json:"inventoryitem_group,omitempty"`
	Comments             *string                `json:"comments,omitempty"`
	Tags                 []NestedTagRequest     `json:"tags,omitempty"`
	CustomFields         map[string]interface{} `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WritableInventoryItemTypeRequest WritableInventoryItemTypeRequest

// NewWritableInventoryItemTypeRequest instantiates a new WritableInventoryItemTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableInventoryItemTypeRequest(model string, slug string, manufacturer int32) *WritableInventoryItemTypeRequest {
	this := WritableInventoryItemTypeRequest{}
	this.Model = model
	this.Slug = slug
	this.Manufacturer = manufacturer
	return &this
}

// NewWritableInventoryItemTypeRequestWithDefaults instantiates a new WritableInventoryItemTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableInventoryItemTypeRequestWithDefaults() *WritableInventoryItemTypeRequest {
	this := WritableInventoryItemTypeRequest{}
	return &this
}

// GetModel returns the Model field value
func (o *WritableInventoryItemTypeRequest) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *WritableInventoryItemTypeRequest) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *WritableInventoryItemTypeRequest) SetModel(v string) {
	o.Model = v
}

// GetSlug returns the Slug field value
func (o *WritableInventoryItemTypeRequest) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *WritableInventoryItemTypeRequest) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *WritableInventoryItemTypeRequest) SetSlug(v string) {
	o.Slug = v
}

// GetManufacturer returns the Manufacturer field value
func (o *WritableInventoryItemTypeRequest) GetManufacturer() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value
// and a boolean to check if the value has been set.
func (o *WritableInventoryItemTypeRequest) GetManufacturerOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manufacturer, true
}

// SetManufacturer sets field value
func (o *WritableInventoryItemTypeRequest) SetManufacturer(v int32) {
	o.Manufacturer = v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *WritableInventoryItemTypeRequest) GetPartNumber() string {
	if o == nil || IsNil(o.PartNumber) {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableInventoryItemTypeRequest) GetPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *WritableInventoryItemTypeRequest) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *WritableInventoryItemTypeRequest) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetInventoryitemGroup returns the InventoryitemGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableInventoryItemTypeRequest) GetInventoryitemGroup() int32 {
	if o == nil || IsNil(o.InventoryitemGroup.Get()) {
		var ret int32
		return ret
	}
	return *o.InventoryitemGroup.Get()
}

// GetInventoryitemGroupOk returns a tuple with the InventoryitemGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableInventoryItemTypeRequest) GetInventoryitemGroupOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryitemGroup.Get(), o.InventoryitemGroup.IsSet()
}

// HasInventoryitemGroup returns a boolean if a field has been set.
func (o *WritableInventoryItemTypeRequest) HasInventoryitemGroup() bool {
	if o != nil && o.InventoryitemGroup.IsSet() {
		return true
	}

	return false
}

// SetInventoryitemGroup gets a reference to the given NullableInt32 and assigns it to the InventoryitemGroup field.
func (o *WritableInventoryItemTypeRequest) SetInventoryitemGroup(v int32) {
	o.InventoryitemGroup.Set(&v)
}

// SetInventoryitemGroupNil sets the value for InventoryitemGroup to be an explicit nil
func (o *WritableInventoryItemTypeRequest) SetInventoryitemGroupNil() {
	o.InventoryitemGroup.Set(nil)
}

// UnsetInventoryitemGroup ensures that no value is present for InventoryitemGroup, not even an explicit nil
func (o *WritableInventoryItemTypeRequest) UnsetInventoryitemGroup() {
	o.InventoryitemGroup.Unset()
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *WritableInventoryItemTypeRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableInventoryItemTypeRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *WritableInventoryItemTypeRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *WritableInventoryItemTypeRequest) SetComments(v string) {
	o.Comments = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WritableInventoryItemTypeRequest) GetTags() []NestedTagRequest {
	if o == nil || IsNil(o.Tags) {
		var ret []NestedTagRequest
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableInventoryItemTypeRequest) GetTagsOk() ([]NestedTagRequest, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WritableInventoryItemTypeRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTagRequest and assigns it to the Tags field.
func (o *WritableInventoryItemTypeRequest) SetTags(v []NestedTagRequest) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *WritableInventoryItemTypeRequest) GetCustomFields() map[string]interface{} {
	if o == nil || IsNil(o.CustomFields) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableInventoryItemTypeRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *WritableInventoryItemTypeRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *WritableInventoryItemTypeRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o WritableInventoryItemTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WritableInventoryItemTypeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	toSerialize["slug"] = o.Slug
	toSerialize["manufacturer"] = o.Manufacturer
	if !IsNil(o.PartNumber) {
		toSerialize["part_number"] = o.PartNumber
	}
	if o.InventoryitemGroup.IsSet() {
		toSerialize["inventoryitem_group"] = o.InventoryitemGroup.Get()
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomFields) {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WritableInventoryItemTypeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"slug",
		"manufacturer",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWritableInventoryItemTypeRequest := _WritableInventoryItemTypeRequest{}

	err = json.Unmarshal(data, &varWritableInventoryItemTypeRequest)

	if err != nil {
		return err
	}

	*o = WritableInventoryItemTypeRequest(varWritableInventoryItemTypeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "model")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "manufacturer")
		delete(additionalProperties, "part_number")
		delete(additionalProperties, "inventoryitem_group")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWritableInventoryItemTypeRequest struct {
	value *WritableInventoryItemTypeRequest
	isSet bool
}

func (v NullableWritableInventoryItemTypeRequest) Get() *WritableInventoryItemTypeRequest {
	return v.value
}

func (v *NullableWritableInventoryItemTypeRequest) Set(val *WritableInventoryItemTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableInventoryItemTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableInventoryItemTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableInventoryItemTypeRequest(val *WritableInventoryItemTypeRequest) *NullableWritableInventoryItemTypeRequest {
	return &NullableWritableInventoryItemTypeRequest{value: val, isSet: true}
}

func (v NullableWritableInventoryItemTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableInventoryItemTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
